name: Tests and Checks

#
# Primary workflow for various tests and checks.
#

on:
  workflow_dispatch:
  pull_request:
    branches-ignore: [release-please--**]
  push:
    branches: [trunk]

env:
  poetry_version: "1.1.15"

jobs:
  primary:
    name: Primary
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.7"]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # ------------------------------------------------------------------------
      # Python & Poetry.

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache Poetry installation
        uses: actions/cache@v3
        with:
          path: |
            ~/.local/bin/poetry
            ~/.local/share/pypoetry
          key: ${{ runner.os }}-poetry-installation-${{ matrix.python-version }}-${{ env.poetry_version }}-0

      - name: Install Poetry
        run: curl -sSL https://install.python-poetry.org | python -
        env:
          POETRY_VERSION: ${{ env.poetry_version }}

      - name: Cache Poetry cache
        uses: actions/cache@v3
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-cache-${{ matrix.python-version }}-${{ env.poetry_version }}-${{ hashFiles('poetry.lock') }}-0
          restore-keys: |
            ${{ runner.os }}-poetry-cache-${{ matrix.python-version }}-${{ env.poetry_version }}-
            ${{ runner.os }}-poetry-cache-${{ matrix.python-version }}-

      - name: Install deps with Poetry
        run: poetry install --no-interaction

      # ------------------------------------------------------------------------
      # Tests.

      - name: Run tests with Pytest
        run: scripts/test.sh

      - name: Upload coverage to Codecov
        if: strategy.job-index == 0
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true

      # ------------------------------------------------------------------------
      # Pre-commit.

      - name: Cache Pre-commit
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pre-commit
            .mypy_cache
          key: ${{ runner.os }}-pre-commit-${{ matrix.python-version }}-${{ hashFiles('.pre-commit-config.yaml') }}-0
          restore-keys: |
            ${{ runner.os }}-pre-commit-${{ matrix.python-version }}-

      - name: Setup Pre-commit
        run: poetry run pre-commit install

      - name: Execute Pre-commit
        run: poetry run pre-commit run -v --show-diff-on-failure

      # ------------------------------------------------------------------------
      # Asdf.

      - name: Install asdf
        uses: asdf-vm/actions/setup@v1

      - name: Cache asdf
        id: cache-asdf
        if: strategy.job-index == 0
        uses: actions/cache@v3
        with:
          path: ~/.asdf
          key: ${{ runner.os }}-asdf-${{ matrix.python-version }}-${{ hashFiles('.tool-versions') }}-0
          restore-keys: |
            ${{ runner.os }}-asdf-${{ matrix.python-version }}-

      - name: Install tools with asdf
        if: strategy.job-index == 0 && steps.cache-asdf.outputs.cache-hit != 'true'
        uses: asdf-vm/actions/install@v1

      - name: Run shfmt
        if: strategy.job-index == 0
        run: scripts/shfmt.sh

      - name: Run shellcheck
        if: strategy.job-index == 0
        run: scripts/shellcheck.sh
